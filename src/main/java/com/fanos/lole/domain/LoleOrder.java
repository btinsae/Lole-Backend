/**
 * This file was generated by the Jeddict
 */
package com.fanos.lole.domain;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

@Entity
@Table(name = "lole_orders", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"order_number"})})
public class LoleOrder {

    @Column(name = "order_id", table = "lole_orders", nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Integer orderId;

    @Column(name = "order_number", table = "lole_orders", length = 10)
    @Basic
    private String orderNumber;

    @Column(name = "order_date", table = "lole_orders", nullable = false)
    @Basic(optional = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date orderDate;

    @Column(name = "total_amount", table = "lole_orders", nullable = false, scale = 2, precision = 12)
    @Basic(optional = false)
    private BigDecimal totalAmount;

    @Column(name = "due_date", table = "lole_orders", nullable = false)
    @Basic(optional = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date dueDate;

    @Column(name = "special_note", table = "lole_orders", length = 100)
    @Basic
    private String specialNote;

    @Column(name = "pick_up_lat", table = "lole_orders", nullable = false)
    @Basic(optional = false)
    private double pickUpLat;

    @Column(name = "pick_up_lng", table = "lole_orders", nullable = false)
    @Basic(optional = false)
    private double pickUpLng;

    @Column(name = "delivery_lat", table = "lole_orders", nullable = false)
    @Basic(optional = false)
    private double deliveryLat;

    @Column(name = "delivery_lng", table = "lole_orders", nullable = false)
    @Basic(optional = false)
    private double deliveryLng;

    @Column(name = "created_at", table = "lole_orders")
    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdAt;

    @Column(name = "updated_at", table = "lole_orders")
    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    private Date updatedAt;

    @ManyToOne(optional = false)
    @JoinColumn(name = "CUSTOMER_ID", referencedColumnName = "CUSTOMER_ID")
    private Customer customerId;

    @OneToMany(mappedBy = "loleOrder")
    private List<OrderLaundry> orderLaundryCollection;

    @OneToMany(mappedBy = "loleOrder")
    private List<OrderItem> orderItemCollection;

    public Integer getOrderId() {
        return this.orderId;
    }

    public void setOrderId(Integer orderId) {
        this.orderId = orderId;
    }

    public String getOrderNumber() {
        return this.orderNumber;
    }

    public void setOrderNumber(String orderNumber) {
        this.orderNumber = orderNumber;
    }

    public Date getOrderDate() {
        return this.orderDate;
    }

    public void setOrderDate(Date orderDate) {
        this.orderDate = orderDate;
    }

    public BigDecimal getTotalAmount() {
        return this.totalAmount;
    }

    public void setTotalAmount(BigDecimal totalAmount) {
        this.totalAmount = totalAmount;
    }

    public Date getDueDate() {
        return this.dueDate;
    }

    public void setDueDate(Date dueDate) {
        this.dueDate = dueDate;
    }

    public String getSpecialNote() {
        return this.specialNote;
    }

    public void setSpecialNote(String specialNote) {
        this.specialNote = specialNote;
    }

    public double getPickUpLat() {
        return this.pickUpLat;
    }

    public void setPickUpLat(double pickUpLat) {
        this.pickUpLat = pickUpLat;
    }

    public double getPickUpLng() {
        return this.pickUpLng;
    }

    public void setPickUpLng(double pickUpLng) {
        this.pickUpLng = pickUpLng;
    }

    public double getDeliveryLat() {
        return this.deliveryLat;
    }

    public void setDeliveryLat(double deliveryLat) {
        this.deliveryLat = deliveryLat;
    }

    public double getDeliveryLng() {
        return this.deliveryLng;
    }

    public void setDeliveryLng(double deliveryLng) {
        this.deliveryLng = deliveryLng;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    public Customer getCustomerId() {
        return this.customerId;
    }

    public void setCustomerId(Customer customerId) {
        this.customerId = customerId;
    }

    public List<OrderLaundry> getOrderLaundryCollection() {
        return this.orderLaundryCollection;
    }

    public void setOrderLaundryCollection(List<OrderLaundry> orderLaundryCollection) {
        this.orderLaundryCollection = orderLaundryCollection;
    }

    public List<OrderItem> getOrderItemCollection() {
        return this.orderItemCollection;
    }

    public void setOrderItemCollection(List<OrderItem> orderItemCollection) {
        this.orderItemCollection = orderItemCollection;
    }

}