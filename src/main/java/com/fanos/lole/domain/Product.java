/**
 * This file was generated by the Jeddict
 */
package com.fanos.lole.domain;

import java.math.BigDecimal;
import java.util.Date;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

@Entity
@Table(name = "products", uniqueConstraints = {
    @UniqueConstraint(columnNames = {"product_name", "service_provider_id"})})
public class Product {

    @Column(name = "product_id", table = "products", nullable = false)
    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private Integer productId;

    @Column(name = "product_name", table = "products", nullable = false, length = 50)
    @Basic(optional = false)
    private String productName;

    @Column(name = "unit_price", table = "products", scale = 2, precision = 12)
    @Basic
    private BigDecimal unitPrice;

    @Column(name = "ingredient", table = "products", nullable = false, length = 145)
    @Basic(optional = false)
    private String ingredient;

    @Column(name = "product_photo_url", table = "products", nullable = false, length = 145)
    @Basic(optional = false)
    private String productPhotoUrl;

    @Column(name = "created_at", table = "products")
    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    private Date createdAt;

    @Column(name = "updated_at", table = "products")
    @Basic
    @Temporal(TemporalType.TIMESTAMP)
    private Date updatedAt;

    @ManyToOne(optional = false)
    @JoinColumn(name = "PRODUCT_TYPE_ID", referencedColumnName = "PRODUCT_TYPE_ID")
    private ProductType productTypeId;

    @ManyToOne(optional = false)
    @JoinColumn(name = "SERVICE_PROVIDER_ID", referencedColumnName = "SERVICE_PROVIDER_ID")
    private ServiceProvider serviceProviderId;

    @OneToMany(mappedBy = "product")
    private List<OrderItem> orderItemCollection;

    @OneToMany(mappedBy = "productId")
    private List<ProductRatingAndComment> productRatingAndCommentCollection;

    public Integer getProductId() {
        return this.productId;
    }

    public void setProductId(Integer productId) {
        this.productId = productId;
    }

    public String getProductName() {
        return this.productName;
    }

    public void setProductName(String productName) {
        this.productName = productName;
    }

    public BigDecimal getUnitPrice() {
        return this.unitPrice;
    }

    public void setUnitPrice(BigDecimal unitPrice) {
        this.unitPrice = unitPrice;
    }

    public String getIngredient() {
        return this.ingredient;
    }

    public void setIngredient(String ingredient) {
        this.ingredient = ingredient;
    }

    public String getProductPhotoUrl() {
        return this.productPhotoUrl;
    }

    public void setProductPhotoUrl(String productPhotoUrl) {
        this.productPhotoUrl = productPhotoUrl;
    }

    public Date getCreatedAt() {
        return this.createdAt;
    }

    public void setCreatedAt(Date createdAt) {
        this.createdAt = createdAt;
    }

    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    public void setUpdatedAt(Date updatedAt) {
        this.updatedAt = updatedAt;
    }

    public ProductType getProductTypeId() {
        return this.productTypeId;
    }

    public void setProductTypeId(ProductType productTypeId) {
        this.productTypeId = productTypeId;
    }

    public ServiceProvider getServiceProviderId() {
        return this.serviceProviderId;
    }

    public void setServiceProviderId(ServiceProvider serviceProviderId) {
        this.serviceProviderId = serviceProviderId;
    }

    public List<OrderItem> getOrderItemCollection() {
        return this.orderItemCollection;
    }

    public void setOrderItemCollection(List<OrderItem> orderItemCollection) {
        this.orderItemCollection = orderItemCollection;
    }

    public List<ProductRatingAndComment> getProductRatingAndCommentCollection() {
        return this.productRatingAndCommentCollection;
    }

    public void setProductRatingAndCommentCollection(List<ProductRatingAndComment> productRatingAndCommentCollection) {
        this.productRatingAndCommentCollection = productRatingAndCommentCollection;
    }

}